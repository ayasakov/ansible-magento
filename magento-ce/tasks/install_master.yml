---
- name: Download Magento
  get_url:
    url: '{{ magento_download_path }}{{ magento_file_name }}'
    dest: '{{ magento_document_root }}'
    owner: 'www-data'
    group: 'www-data'
    validate_certs: no

- name: Download Sample Content
  get_url:
    url: '{{ magento_download_path }}{{ magento_sample_file_name }}'
    dest: '{{ magento_document_root }}'
    owner: 'www-data'
    group: 'www-data'
    validate_certs: no
  when: magento_sample_content == 'True'

- name: Unpack Magento
  unarchive:
    src: '{{ magento_document_root }}/{{ magento_file_name }}'
    dest: '{{ magento_document_root }}'
    owner: 'www-data'
    group: 'www-data'
    copy: no

- name: Unpack Sample Content
  unarchive:
    src: '{{ magento_document_root }}/{{ magento_sample_file_name }}'
    dest: '{{ magento_document_root }}'
    owner: 'www-data'
    group: 'www-data'
    copy: no
  when: magento_sample_content == 'True'

- name: Download 'Magento Sample Version' file
  get_url:
    url: '{{ magento_download_path }}sample_content_version.txt'
    dest: '{{ magento_document_root }}'
    owner: 'www-data'
    group: 'www-data'

- name: Get Sample Data Version
  command:
    'cat sample_content_version.txt'
  args:
    chdir: '{{ magento_document_root }}'
  register: magento_sample_content_version

- name: Import Sample MySQL Data
  mysql_db:
    name: '{{ magento_mysql_database }}'
    target: '{{ magento_document_root}}/magento-sample-data-{{ magento_sample_content_version.stdout }}/magento_sample_data_for_{{ magento_sample_content_version.stdout }}.sql'
    state: import
    login_host: '{{ magento_mysql_host_ip }}'
    login_user: '{{ magento_mysql_user }}'
    login_password: '{{ magento_mysql_password }}'
  when: magento_sample_content == 'True'

- name: Copy Core Files
  shell:
    'cp -R {{ magento_document_root }}/magento/{{ item }} {{ magento_document_root }}/'
  args:
    chdir: '{{ magento_document_root }}'
  with_items:
    - '*'
    - '.htaccess'

- name: Copy Core Sample Files
  copy:
    src: '{{ magento_document_root }}/magento-sample-data-{{ magento_sample_content_version.stdout }}/{{ item }}'
    dest: '{{ magento_document_root }}'
    force: yes
  with_items:
    - 'media'
    - 'skin'
  when: magento_sample_content == 'True'

- name: Change chown
  shell:
    'chown -R www-data:www-data {{ magento_document_root }}/{{ item }}'
  args:
    chdir: '{{ magento_document_root }}'
  with_items:
    - '*'
    - '.htaccess'

- name: Delete Garbage Files
  file:
    path: '{{ magento_document_root }}/{{ item }}'
    state: absent
  with_items:
    magento_garbage_files

- name: Set Mage as Executable
  file:
    path: '{{ magento_document_root }}/mage'
    mode: 0500
    state: file

- name: Run 'mage mage-setup'
  command: '{{ magento_document_root }}/mage mage-setup .'
  args:
    chdir: '{{ magento_document_root }}'

- name: Set Mage Preferred_State to Stable
  command: '{{ magento_document_root }}/mage config-set preferred_state stable'
  args:
    chdir: '{{ magento_document_root }}'

- name: Run Mage Install
  command: '{{ magento_document_root }}/mage install http://connect20.magentocommerce.com/community Mage_All_Latest --force'
  args:
    chdir: '{{ magento_document_root }}'

- name: Run Magento Installer
  command: 'php -f install.php -- --license_agreement_accepted "yes" --locale "en_US" --timezone "{{ tz }}" --default_currency "USD" --db_host {{ magento_mysql_host_ip }} --db_name {{ magento_mysql_database }} --db_user {{ magento_mysql_user }} --db_pass {{ magento_mysql_password }} --url http://{{ magento_vhost_domain }} --skip_url_validation --use_rewrites "yes" --use_secure "no" --secure_base_url https://{{ magento_vhost_domain }} --use_secure_admin "no" --admin_firstname {{ magento_admin_fname }} --admin_lastname {{ magento_admin_lname }} --admin_email {{ magento_admin_email }} --admin_username {{ magento_admin_user }} --admin_password {{ magento_admin_pass }}'
  args:
    chdir: "{{ magento_document_root }}"
  notify:
    - Restart Nginx